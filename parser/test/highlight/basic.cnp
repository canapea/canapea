module "elmish/tea"
# <- keyword.other.canapea

import "some/thing" as thing
# <- meta.import.canapea
#                   ^^ keyword.other.canapea

import "some/other"
  exposing
    | TypeCtor
    # <- keyword.other.canapea
    # ^^^^^^^^ union.canapea

type Msg =
# <- keyword.type.canapea
#    ^^^ storage.type.canapea
#        ^ keyword.operator.assignment.canapea
    | Increment
    # <- keyword.other.canapea
    | Decrement
    # ^^^^^^^^^ union.canapea

type record Model =
# <- keyword.type.canapea
#    ^^^^^^ keyword.type.canapea
#           ^^^^^ storage.type.canapea
  { count : Int
  #       ^ keyword.other.canapea
  }

let update : Msg -> Model
let update msg model =
# <- keyword.control.canapea
#   ^^^^^^ function.canapea
  when msg is
  # <- keyword.control.canapea
  #        ^^ keyword.control.canapea
    | Increment ->
      #         ^^ keyword.operator.arrow.canapea
      model + 1
      #     ^ keyword.operator.canapea

    | Decrement ->
      model - 1
      #       ^ constant.numeric.canapea

let view model =
  #            ^ keyword.operator.assignment.canapea
  div []
    [ button [ onClick Decrement ] [ text "-" ]
    #                                      ^ string.canapea
    , div [] [ text (String.fromInt model) ]
    , button [ onClick Increment ] [ text "+" ]
    ]
