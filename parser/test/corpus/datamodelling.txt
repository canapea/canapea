===
Define a basic Custom Type with parameterless constructors
===

module

type Color =
  | Red
  | Green
  | Blue

---

(source_file
  (module_declaration
    (module))
  (custom_type_declaration
    (type)
    name: (custom_type_constructor_name)
    (eq)
    (custom_type_constructor
      name: (custom_type_constructor_name))
    (custom_type_constructor
      name: (custom_type_constructor_name))
    (custom_type_constructor
      name: (custom_type_constructor_name))))

===
Define a Custom Type with a constructor that has concrete type parameters
===

module

type Id =
  | Id String Int

---

(source_file
  (module_declaration
    (module))
  (custom_type_declaration
    (type)
    name: (custom_type_constructor_name)
    (eq)
    (custom_type_constructor
      name: (custom_type_constructor_name)
      (uppercase_identifier)
      (uppercase_identifier))))

===
Custom Type with basic type variables
===

module

type Point a b c =
  | Point String a b c

---

(source_file
  (module_declaration
    (module))
  (custom_type_declaration
    (type)
    name: (custom_type_constructor_name)
    (type_variable)
    (type_variable)
    (type_variable)
    (eq)
    (custom_type_constructor
      name: (custom_type_constructor_name)
      (uppercase_identifier)
      (type_variable)
      (type_variable)
      (type_variable))))

===
Custom Type with more complex type variable usage
===

module

type Point a b c =
  | Point (K a) (L b c) (M a b String c)

---

(source_file
  (module_declaration
    (module))
  (custom_type_declaration
    (type)
    name: (custom_type_constructor_name)
    (type_variable)
    (type_variable)
    (type_variable)
    (eq)
    (custom_type_constructor
      name: (custom_type_constructor_name)
      (custom_type_expression
        name: (uppercase_identifier)
        (type_variable))
      (custom_type_expression
        name: (uppercase_identifier)
        (type_variable)
        (type_variable))
      (custom_type_expression
        name: (uppercase_identifier)
        (type_variable)
        (type_variable)
        (uppercase_identifier)
        (type_variable)))))

===
Basic Record declaration
===

module

record X =
  { a : String
  , b : Int
  }

---

(source_file
  (module_declaration
    (module))
  (record_declaration
    (record)
    (uppercase_identifier)
    (eq)
    (record_type_expression
      (record_type_entry
        (simple_record_key)
        (colon)
        (custom_type_constructor
          (custom_type_constructor_name)))
      (record_type_entry
        (simple_record_key)
        (colon)
        (custom_type_constructor
          (custom_type_constructor_name))))))
