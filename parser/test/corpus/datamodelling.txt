===
PTC0025: Define a basic Custom Type with parameterless constructors
===

module

type Color =
  | Red
  | Green
  | Blue

---

(source_file
  (module_declaration
    (module_signature
      (module))
    (custom_type_declaration
      (type)
      (custom_type_name)
      (eq)
      (custom_type_constructor
        (custom_type_constructor_name))
      (custom_type_constructor
        (custom_type_constructor_name))
      (custom_type_constructor
        (custom_type_constructor_name)))))


===
PTC0026: Define a Custom Type with a constructor that has concrete type parameters
===

module

type Id =
  | Id String Int

---

(source_file
  (module_declaration
    (module_signature
      (module))
    (custom_type_declaration
      (type)
      name: (custom_type_name)
      (eq)
      (custom_type_constructor
        name: (custom_type_constructor_name)
        (custom_type_constructor_name)
        (custom_type_constructor_name)))))

===
PTC0027: (regression) Define multiple Custom Types in a row
===

module

type Id =
  | Id String
  | IdNumeric Int

type A =
  | B
  | C
  | D

---

(source_file
  (module_declaration
    (module_signature
      (module))
    (custom_type_declaration
      (type)
      (custom_type_name)
      (eq)
      (custom_type_constructor
        (custom_type_constructor_name)
        (custom_type_constructor_name))
      (custom_type_constructor
        (custom_type_constructor_name)
        (custom_type_constructor_name)))
    (custom_type_declaration
      (type)
      (custom_type_name)
      (eq)
      (custom_type_constructor
        (custom_type_constructor_name))
      (custom_type_constructor
        (custom_type_constructor_name))
      (custom_type_constructor
        (custom_type_constructor_name)))))

===
PTC0028: Custom Type with basic type variables
===

module

type Point a b c =
  | Point String a b c

---

(source_file
  (module_declaration
    (module_signature
      (module))
    (custom_type_declaration
      (type)
      name: (custom_type_name)
      (type_variable)
      (type_variable)
      (type_variable)
      (eq)
      (custom_type_constructor
        name: (custom_type_constructor_name)
        (custom_type_constructor_name)
        (type_variable)
        (type_variable)
        (type_variable)))))

===
PTC0029: Custom Type with more complex type variable usage
===

module

type Point a b c =
  | Point (K a) (L b c) (M a b String c)

---

(source_file
  (module_declaration
    (module_signature
      (module))
    (custom_type_declaration
      (type)
      name: (custom_type_name)
      (type_variable)
      (type_variable)
      (type_variable)
      (eq)
      (custom_type_constructor
        name: (custom_type_constructor_name)
        (custom_type_expression
          name: (custom_type_name)
          (type_variable))
        (custom_type_expression
          name: (custom_type_name)
          (type_variable)
          (type_variable))
        (custom_type_expression
          name: (custom_type_name)
          (type_variable)
          (type_variable)
          (custom_type_name)
          (type_variable))))))

===
PTC0030: Basic Record declaration
===

module

type record X =
  { a : String
  , b : Int
  }

---

(source_file
  (module_declaration
    (module_signature
      (module))
    (record_declaration
      (type)
      (record)
      (record_name)
      (eq)
      (record_type_expression
        (record_type_entry
          (simple_record_key)
          (colon)
          (custom_type_expression
            (custom_type_name)))
        (record_type_entry
          (simple_record_key)
          (colon)
          (custom_type_expression
            (custom_type_name)))))))

===
PTC0031: Record declaration with type variables
===

module

type record X a b =
  { key1 : a
  , key2 : b
  }

---

(source_file
  (module_declaration
    (module_signature
      (module))
    (record_declaration
      (type)
      (record)
      (record_name)
      (type_variable)
      (type_variable)
      (eq)
      (record_type_expression
        (record_type_entry
          (simple_record_key)
          (colon)
          (type_variable))
        (record_type_entry
          (simple_record_key)
          (colon)
          (type_variable))))))

===
PTC0032: Custom Type declaration with simple record type parameter
===

module

type Config =
  | Config Key { path : String, logLevel : LogLevel }

---

(source_file
  (module_declaration
    (module_signature
      (module))
    (custom_type_declaration
      (type)
      (custom_type_name)
      (eq)
      (custom_type_constructor
        (custom_type_constructor_name)
        (custom_type_constructor_name)
        (record_type_expression
          (record_type_entry
            (simple_record_key)
            (colon)
            (custom_type_expression
              (custom_type_name)))
          (record_type_entry
            (simple_record_key)
            (colon)
            (custom_type_expression
              (custom_type_name))))))))
